{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\n\nfunction LoginFormComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getPasswordErrorMessage());\n  }\n}\n\nexport let LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.submitted = new EventEmitter();\n      this.loginForm = this.formBuilder.group({\n        username: ['', [Validators.required]],\n        password: ['', [Validators.required, Validators.minLength(5)]]\n      });\n      this.hide = true;\n    }\n\n    onSubmit() {\n      if (this.loginForm.invalid) return;\n      this.submitted.emit(this.loginForm.value);\n    }\n\n    getPasswordErrorMessage() {\n      if (this.loginForm.get('password')?.hasError('minlength')) {\n        return 'Password must be equal or longer than 5';\n      }\n\n      return '';\n    }\n\n  }\n\n  LoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n\n  LoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    outputs: {\n      submitted: \"submitted\"\n    },\n    decls: 17,\n    vars: 6,\n    consts: [[1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"fill\", 1, \"login-form-field\"], [\"matInput\", \"\", \"placeholder\", \"Username\", \"formControlName\", \"username\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [4, \"ngIf\"], [\"mat-flat-button\", \"\", \"type\", \"submit\", \"color\", \"primary\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-form-field\", 1)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 1)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 3);\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function LoginFormComponent_Template_button_click_11_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(12, \"mat-icon\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(14, LoginFormComponent_mat_error_14_Template, 2, 1, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 6);\n        i0.ɵɵtext(16, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i2.NgIf, i3.MatError, i3.MatFormField, i3.MatLabel, i3.MatSuffix, i4.MatInput, i5.MatButton, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i6.MatIcon],\n    styles: [\".login-form[_ngcontent-%COMP%]{max-width:400px;margin:auto;padding:20px;background-color:#f1f1f1}.login-form-field[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return LoginFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}