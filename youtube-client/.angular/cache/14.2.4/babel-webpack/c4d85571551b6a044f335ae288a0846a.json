{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let SearchFilterPipe = /*#__PURE__*/(() => {\n  class SearchFilterPipe {\n    transform(dataToFilter, searchQuery, filterQuery) {\n      if (!dataToFilter) return null; // if neither searchQuery nor filterQuery weren't provided;\n\n      if (!searchQuery && !filterQuery) return dataToFilter; // if both searchQuery and filterQuery provided\n\n      if (searchQuery && filterQuery) {\n        const filteredBySearchQuery = this.filterByString(dataToFilter, searchQuery);\n        return this.filterByString(filteredBySearchQuery, filterQuery);\n      } // if only searchQuery provided\n\n\n      if (searchQuery) {\n        return this.filterByString(dataToFilter, searchQuery);\n      } // if only filterQuery provided\n\n\n      return this.filterByString(dataToFilter, filterQuery);\n    }\n\n    filterByString(dataToFilter, string) {\n      return dataToFilter.filter(data => {\n        return data.snippet.title.toLowerCase().includes(string);\n      });\n    }\n\n  }\n\n  SearchFilterPipe.ɵfac = function SearchFilterPipe_Factory(t) {\n    return new (t || SearchFilterPipe)();\n  };\n\n  SearchFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"searchFilter\",\n    type: SearchFilterPipe,\n    pure: false\n  });\n  return SearchFilterPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}