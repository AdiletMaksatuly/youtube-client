{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/button-toggle\";\n\nfunction FilterComponent_mat_button_toggle_group_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-button-toggle-group\", 9);\n    i0.ɵɵlistener(\"change\", function FilterComponent_mat_button_toggle_group_11_Template_mat_button_toggle_group_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onFilterOrderChange($event.value));\n    });\n    i0.ɵɵelementStart(1, \"mat-button-toggle\", 10);\n    i0.ɵɵtext(2, \"ascending\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-button-toggle\", 11);\n    i0.ɵɵtext(4, \"descending\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nvar FilterTypes = /*#__PURE__*/(() => {\n  (function (FilterTypes) {\n    FilterTypes[\"DATE\"] = \"date\";\n    FilterTypes[\"COUNT_OF_VIEWS\"] = \"count_of_views\";\n  })(FilterTypes || (FilterTypes = {}));\n\n  return FilterTypes;\n})();\nexport let FilterComponent = /*#__PURE__*/(() => {\n  class FilterComponent {\n    constructor() {\n      this.filtered = new EventEmitter();\n      this.filteredByString = new EventEmitter();\n      this.selectedFilter = null;\n      this.selectedFilterOrder = 'ascending';\n    }\n\n    onFilterChange(selectedFilter) {\n      this.selectedFilter = selectedFilter;\n      let filterQuery = null;\n\n      if (selectedFilter === FilterTypes.DATE) {\n        filterQuery = {\n          date: this.selectedFilterOrder,\n          countOfViews: null\n        };\n      }\n\n      if (selectedFilter === FilterTypes.COUNT_OF_VIEWS) {\n        filterQuery = {\n          countOfViews: this.selectedFilterOrder,\n          date: null\n        };\n      }\n\n      this.filtered.emit(filterQuery);\n      console.log(filterQuery);\n    }\n\n    onFilterOrderChange(selectedFilterOrder) {\n      this.selectedFilterOrder = selectedFilterOrder;\n      this.onFilterChange(this.selectedFilter);\n    }\n\n    onFilterStringChange(filterString) {\n      this.filteredByString.emit(filterString);\n    }\n\n  }\n\n  FilterComponent.ɵfac = function FilterComponent_Factory(t) {\n    return new (t || FilterComponent)();\n  };\n\n  FilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilterComponent,\n    selectors: [[\"app-filter\"]],\n    outputs: {\n      filtered: \"filtered\",\n      filteredByString: \"filteredByString\"\n    },\n    decls: 17,\n    vars: 1,\n    consts: [[1, \"filter-list-item\", \"filter-list-item-sort\"], [\"name\", \"filter\", \"aria-label\", \"Search filter\", 3, \"change\"], [\"value\", \"date\"], [\"value\", \"count_of_views\"], [1, \"filter-list-item\", 2, \"text-align\", \"right\"], [\"value\", \"ascending\", \"name\", \"filterOrder\", \"aria-label\", \"Search filter order\", 3, \"change\", 4, \"ngIf\"], [1, \"filter-list-item\"], [\"matInput\", \"\", 1, \"filter-string-input\", 3, \"change\"], [\"filterStringInput\", \"\"], [\"value\", \"ascending\", \"name\", \"filterOrder\", \"aria-label\", \"Search filter order\", 3, \"change\"], [\"value\", \"ascending\"], [\"value\", \"descending\"]],\n    template: function FilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\")(1, \"ul\")(2, \"li\", 0)(3, \"span\");\n        i0.ɵɵtext(4, \"Searching by: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-button-toggle-group\", 1);\n        i0.ɵɵlistener(\"change\", function FilterComponent_Template_mat_button_toggle_group_change_5_listener($event) {\n          return ctx.onFilterChange($event.value);\n        });\n        i0.ɵɵelementStart(6, \"mat-button-toggle\", 2);\n        i0.ɵɵtext(7, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-button-toggle\", 3);\n        i0.ɵɵtext(9, \"count of views\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"li\", 4);\n        i0.ɵɵtemplate(11, FilterComponent_mat_button_toggle_group_11_Template, 5, 0, \"mat-button-toggle-group\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"li\", 6)(13, \"span\");\n        i0.ɵɵtext(14, \"by word or sentence: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 7, 8);\n        i0.ɵɵlistener(\"change\", function FilterComponent_Template_input_change_15_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r1 = i0.ɵɵreference(16);\n\n          return i0.ɵɵresetView(ctx.onFilterStringChange(_r1.value));\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedFilter);\n      }\n    },\n    dependencies: [i1.NgIf, i2.MatInput, i3.MatButtonToggleGroup, i3.MatButtonToggle],\n    styles: [\".filter-list-item[_ngcontent-%COMP%]{margin-bottom:10px}.filter-list-item-sort[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.filterBtns[_ngcontent-%COMP%]{display:block}.filter-string-input[_ngcontent-%COMP%]{background-color:#fff;width:auto}\"]\n  });\n  return FilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}